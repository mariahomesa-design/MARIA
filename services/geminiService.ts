
import { GoogleGenAI, Modality } from "@google/genai";
import type { Theme, Language } from "./types";

// IMPORTANT: Do not expose the API key in client-side code in a real production app.
// This is done here for demonstration purposes. In a real app, this would be handled
// by a backend server that makes requests to the Gemini API.
const API_KEY = process.env.API_KEY;

if (!API_KEY) {
  throw new Error("API_KEY is not defined. Please set it in your environment variables.");
}

const ai = new GoogleGenAI({ apiKey: API_KEY });

const fileToGenerativePart = (base64: string, mimeType: string) => {
  return {
    inlineData: {
      data: base64,
      mimeType,
    },
  };
};

export const detectRoomType = async (imageBase64: string, lang: Language): Promise<string> => {
  const model = 'gemini-2.5-flash';
  const imagePart = fileToGenerativePart(imageBase64, 'image/jpeg');
  
  const prompt = lang === 'en' 
    ? "What type of room is this (e.g., Living Room, Kitchen, Bedroom, Empty Room)? Respond with only the room type in 1-3 words."
    : "ما هو نوع هذه الغرفة (مثال: غرفة معيشة، مطبخ، غرفة نوم، غرفة فارغة)؟ أجب بنوع الغرفة فقط في 1-3 كلمات.";

  try {
    const response = await ai.models.generateContent({
        model: model,
        contents: { parts: [imagePart, { text: prompt }] },
    });
    return response.text.trim();
  } catch (error) {
    console.error("Error detecting room type:", error);
    return lang === 'en' ? 'room' : 'غرفة'; // Fallback value
  }
};

export const generateDesignedImage = async (
  imageBase64: string,
  theme: Theme,
  roomType: string,
  lang: Language
): Promise<string> => {
    // This is a placeholder for the AI image generation API call.
    // We will use Gemini's image generation capabilities.
    const model = 'gemini-2.5-flash-image';
    const imagePart = fileToGenerativePart(imageBase64, 'image/jpeg');

    const prompt = lang === 'en'
      ? `Generate a photorealistic, fully furnished, and professionally designed image of this ${roomType}. The design style must be ${theme}. The new design should respect the original room's structural layout, like windows and doors. The room is currently empty or under construction. Make it look like a real photograph from an architecture magazine.`
      : `أنشئ صورة واقعية ومفروشة بالكامل ومصممة باحتراف لهذه ال${roomType}. يجب أن يكون طراز التصميم ${theme}. يجب أن يحترم التصميم الجديد التخطيط الهيكلي الأصلي للغرفة، مثل النوافذ والأبواب. الغرفة حاليًا فارغة أو قيد الإنشاء. اجعلها تبدو كصورة فوتوغرافية حقيقية من مجلة معمارية.`;

    const response = await ai.models.generateContent({
      model: model,
      contents: { parts: [imagePart, { text: prompt }] },
      config: {
        responseModalities: [Modality.IMAGE],
      },
    });

    const firstPart = response.candidates?.[0]?.content?.parts?.[0];
    if (firstPart && firstPart.inlineData) {
      return firstPart.inlineData.data;
    }
    
    throw new Error("No image was generated by the AI.");
};

export const estimateCost = async (theme: Theme, lang: Language): Promise<string> => {
  const model = 'gemini-2.5-flash';
  
  const prompt = lang === 'en'
    ? `Provide a detailed cost breakdown for furnishing a standard-sized room in a ${theme} style. Break down the estimate into categories like: Furniture, Lighting, Paint & Wall Treatments, and Decor & Accessories. For each category, provide a rough price range in USD. Format the response using bullet points for each category. The tone should be helpful and informative.`
    : `قدم تفصيلاً لتقدير تكلفة تأثيث غرفة ذات حجم قياسي على طراز ${theme}. قسّم التقدير إلى فئات مثل: الأثاث، الإضاءة، الطلاء وتشطيبات الجدران، والديكور والإكسسوارات. لكل فئة، قدم نطاقًا سعريًا تقريبيًا بالدولار الأمريكي. نسّق الإجابة باستخدام نقاط (bullet points) لكل فئة. يجب أن تكون النبرة مفيدة وغنية بالمعلومات.`;

  try {
    const response = await ai.models.generateContent({
        model: model,
        contents: prompt,
    });
    return response.text;
  } catch (error) {
    console.error("Error estimating cost:", error);
    return lang === 'en' ? 'Could not estimate cost at this time.' : 'تعذر تقدير التكلفة في الوقت الحالي.';
  }
};
